{"version":3,"sources":["webpack:///./src/components/xo-game/Game.js","webpack:///./src/pages/xo.js"],"names":["initialBoardState","Game","useState","gameState","setGameState","winner","setWinner","iter","setIter","round","setRound","winning","b","player","move","square","newArray","minimax","array","filter","s","avail","score","length","bestMove","moves","i","index","g","push","bestScore","className","onClick","XO","props","id","style","marginTop","to","position","top","left","padding"],"mappings":"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","file":"component---src-pages-xo-js-01b16375476badc6e052.js","sourcesContent":["import  React, { useState } from \"react\";\r\n/*\r\n    b should look like this\r\n    initialBoardState = [\r\n        [\"_\",\"_\",\"_\"],\r\n        [\"_\",\"_\",\"_\"],\r\n        [\"_\",\"_\",\"_\"]\r\n    ]\r\n */\r\nconst initialBoardState = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\nconst human = \"X\";\r\nconst ai = \"O\";\r\n\r\nconst Game = () => {\r\n    const [gameState, setGameState] = useState(initialBoardState);\r\n    const [winner, setWinner] = useState(\"\");\r\n    const [iter, setIter] = useState(0);\r\n    const [round, setRound] = useState(0);\r\n\r\n    function minimax(b, player) {\r\n        setIter(iter + 1);\r\n        let array = avail(b);\r\n        if (winning(b, human)) {\r\n            return { score: -10 };\r\n        } else if (winning(b, ai)) {\r\n            return { score: 10 };\r\n        } else if (array.length === 0) {\r\n            return { score: 0 };\r\n        }\r\n\r\n        let moves = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            let move = {};\r\n            move.index = b[array[i]];\r\n            b[array[i]] = player;\r\n\r\n            if(player === ai) {\r\n                let g = minimax(b, human);\r\n                move.score = g.score;\r\n            } else {\r\n                let g = minimax(b, ai);\r\n                move.score = g.score;\r\n            }\r\n            b[array[i]] = move.index;\r\n            moves.push(move);\r\n        }\r\n\r\n        let bestMove;\r\n        if (player === ai) {\r\n            let bestScore = -1000;\r\n            for (let i = 0; i < moves.length; i++) {\r\n                if (moves[i].score > bestScore) {\r\n                    bestScore = moves[i].score;\r\n                    bestMove = i;\r\n                }\r\n            }\r\n        } else {\r\n            let bestScore = 10000;\r\n            for (let i = 0; i < moves.length; i++) {\r\n                if (moves[i].score < bestScore) {\r\n                    bestScore = moves[i].score;\r\n                    bestMove = i;\r\n                }\r\n            }\r\n        }\r\n        return moves[bestMove];\r\n    }\r\n\r\n    function reset() {\r\n        setGameState(initialBoardState);\r\n        setIter(0);\r\n        setRound(0);\r\n    }\r\n\r\n    function avail(b) {\r\n        return b.filter(s => s !== \"X\" && s !== \"O\");\r\n    }\r\n\r\n    function winning(b, player) {\r\n        return (b[0] === player && b[1] === player && b[2] === player) ||\r\n            (b[3] === player && b[4] === player && b[5] === player) ||\r\n            (b[6] === player && b[7] === player && b[8] === player) ||\r\n            (b[0] === player && b[3] === player && b[6] === player) ||\r\n            (b[1] === player && b[4] === player && b[7] === player) ||\r\n            (b[2] === player && b[5] === player && b[8] === player) ||\r\n            (b[0] === player && b[4] === player && b[8] === player) ||\r\n            (b[2] === player && b[4] === player && b[6] === player);\r\n    }\r\n\r\n    function move(square, player) {\r\n        if (gameState[square] !== \"X\" && gameState[square] !== \"O\") {\r\n            setRound(round + 1);\r\n            let newArray = [...gameState];\r\n            newArray[square] = player;\r\n            setGameState(newArray);\r\n\r\n            if (winning(newArray, player)) {\r\n                setWinner(\"Player\");\r\n                return;\r\n            } else {\r\n                setRound(round + 1);\r\n                let index = minimax(newArray, ai).index;\r\n                newArray[index] = ai;\r\n                setGameState(newArray);\r\n                if (winning(newArray, ai)) {\r\n                    setWinner(\"AI\");\r\n                    return;\r\n                }\r\n                if (round === 4) {\r\n                    setWinner(\"Draw\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"d-flex\">\r\n            <button onClick={() => move(0,\"X\")}> {typeof(gameState[0]) === \"number\" ? ' ' : gameState[0]} </button>\r\n            <button onClick={() => move(1,\"X\")}> {typeof(gameState[1]) === \"number\" ? ' ' : gameState[1]} </button>\r\n            <button onClick={() => move(2,\"X\")}> {typeof(gameState[2]) === \"number\" ? ' ' : gameState[2]} </button>\r\n            <button onClick={() => move(3,\"X\")}> {typeof(gameState[3]) === \"number\" ? ' ' : gameState[3]} </button>\r\n            <button onClick={() => move(4,\"X\")}> {typeof(gameState[4]) === \"number\" ? ' ' : gameState[4]} </button>\r\n            <button onClick={() => move(5,\"X\")}> {typeof(gameState[5]) === \"number\" ? ' ' : gameState[5]} </button>\r\n            <button onClick={() => move(6,\"X\")}> {typeof(gameState[6]) === \"number\" ? ' ' : gameState[6]} </button>\r\n            <button onClick={() => move(7,\"X\")}> {typeof(gameState[7]) === \"number\" ? ' ' : gameState[7]} </button>\r\n            <button onClick={() => move(8,\"X\")}> {typeof(gameState[8]) === \"number\" ? ' ' : gameState[8]} </button>\r\n            <p> Winner: {winner}</p>\r\n        </div>\r\n            <button onClick={reset}>Reset</button>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Game;","import React from \"react\";\r\nimport Game from \"../components/xo-game/Game\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./css/xo.css\"\r\n\r\nfunction XO(props) {\r\n\r\n    return (\r\n        <div id=\"xo\" style={{marginTop: \"30px\"}}>\r\n            <Link to=\"/\" style={{position: \"absolute\", top: \"0\", left: \"0\", padding: \"20px\"}}>Go Back</Link>\r\n            <Game/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XO;"],"sourceRoot":""}