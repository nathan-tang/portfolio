{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./src/pages/shiritori.js","webpack:///./node_modules/core-js/modules/_object-to-array.js"],"names":["$export","$entries","S","entries","it","Shiritori","props","useState","valid","setValid","word","setWord","history","setHistory","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","dictionary","setDictionary","useEffect","object","Object","wordData","tempDictionary","map","data","charAt","push","id","style","marginTop","to","position","top","left","padding","className","aria-label","type","onChange","event","target","value","onClick","length","console","log","newHistory","undefined","indexOf","DESCRIPTORS","getKeys","toIObject","isEnum","module","exports","isEntries","key","O","keys","result","call"],"mappings":"gFACA,IAAIA,EAAU,EAAQ,QAClBC,EAAW,EAAQ,OAAR,EAA8B,GAE7CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BC,QAAS,SAAiBC,GACxB,OAAOH,EAASG,O,kICmELC,UArEf,SAAmBC,GAAQ,IAAD,EACIC,mBAAS,IAA5BC,EADe,KACRC,EADQ,OAEEF,mBAAS,IAA1BG,EAFe,KAETC,EAFS,OAGQJ,mBAAS,IAAhCK,EAHe,KAGNC,EAHM,OAIYN,mBAAS,CAAEO,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,KAA1NC,EAJiB,KAILC,EAJK,KAmDtB,OA5CAC,qBAAU,WACN,IAAIC,EAASC,OAAOzC,QAAQ0C,GACxBC,EAAiB,CAAEhC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACzMI,EAAOI,KAAK,SAACC,GAET,OADAF,EAAeE,EAAK,GAAGC,OAAO,IAAIC,KAAKF,EAAK,IACrC,KAEXP,EAAcK,KACf,IAqCC,yBAAKK,GAAG,YAAYC,MAAO,CAACC,UAAW,SACnC,kBAAC,OAAD,CAAMC,GAAG,IAAIF,MAAO,CAACG,SAAU,WAAYC,IAAK,IAAKC,KAAM,IAAKC,QAAS,SAAzE,WACA,yBAAKC,UAAU,aACX,6BACI,2BAAOC,aAAW,QAAlB,eACA,2BAAOC,KAAK,OAAOC,SA7BX,SAAAC,GACpBpD,EAAQoD,EAAMC,OAAOC,UA6BT,4BAAQC,QA1BL,SAAAH,GACf,GAAuB,IAAnBnD,EAAQuD,OAAc,CACtBC,QAAQC,IAAI,mBACZ,IAAIC,EAAa1D,EACjB0D,EAAWpB,KAAKxC,GAChBG,EAAWyD,GAEf,QAAaC,IAAT7D,EACA,IAA8G,IAA1G8B,EAAW5B,EAAQA,EAAQuD,OAAS,GAAGlB,OAAOrC,EAAQA,EAAQuD,OAAS,GAAGA,OAAS,IAAIK,QAAQ9D,GAAc,CAC7G,IAAI4D,EAAa1D,EACjB0D,EAAWpB,KAAKxC,GAChBG,EAAWyD,GACX7D,EAAS,aAETA,EAAS,WAYL,WAEJ,6BACI,+CAAqBD,GACrB,2BAAII,Q,qBClExB,IAAI6D,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QACpBC,EAAS,EAAQ,QAAiBzD,EACtC0D,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAU3E,GAOf,IANA,IAKI4E,EALAC,EAAIN,EAAUvE,GACd8E,EAAOR,EAAQO,GACfd,EAASe,EAAKf,OACd7C,EAAI,EACJ6D,EAAS,GAENhB,EAAS7C,GACd0D,EAAME,EAAK5D,KACNmD,IAAeG,EAAOQ,KAAKH,EAAGD,IACjCG,EAAOjC,KAAK6B,EAAY,CAACC,EAAKC,EAAED,IAAQC,EAAED,IAG9C,OAAOG,K","file":"component---src-pages-shiritori-js-44dad7bb0f53f718261d.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import  React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport wordData from \"../data/words_dictionary\";\r\n\r\nfunction Shiritori(props) {\r\n    const [valid, setValid] = useState(\"\");\r\n    const [word, setWord] = useState(\"\");\r\n    const [history, setHistory] = useState([]);\r\n    let [dictionary, setDictionary] = useState({ a: [], b: [], c: [], d: [], e: [], f: [], g: [], h: [], i: [], j: [], k: [], l: [], m: [], n: [], o: [], p: [], q: [], r: [], s: [], t: [], u: [], v: [], w: [], x: [], y: [], z: [] });\r\n\r\n    // alphabetize\r\n    useEffect(() => {\r\n        let object = Object.entries(wordData);\r\n        let tempDictionary = { a: [], b: [], c: [], d: [], e: [], f: [], g: [], h: [], i: [], j: [], k: [], l: [], m: [], n: [], o: [], p: [], q: [], r: [], s: [], t: [], u: [], v: [], w: [], x: [], y: [], z: [] };\r\n        object.map( (data) => {\r\n            tempDictionary[data[0].charAt(0)].push(data[0]);\r\n            return 0;\r\n        });\r\n        setDictionary(tempDictionary);\r\n    }, []);\r\n\r\n    // console.log(dictionary[\"a\"].includes(\"apple\"));\r\n    // console.log(dictionary[\"a\"].includes(\"bee\"));\r\n    // const index = dictionary[\"a\"].indexOf(\"apple\");\r\n    // if (index > -1) { dictionary[\"a\"].splice(index) }\r\n    // console.log(dictionary[\"a\"].indexOf(\"bee\")); // equals -1 because does not exist // this is how to determine if word exist.\r\n    // console.log(dictionary[\"a\"].includes(\"apple\"));\r\n\r\n    // Game Logic Flow:\r\n    // Every time a word is used remove it from dictionary.\r\n    // AI will grab random word from dictionary[letter] via dictionary[letter][random_index] and random_index = 0 - dictionary[letter].length\r\n\r\n    let handleInputChange = event => {\r\n        setWord(event.target.value);\r\n    };\r\n\r\n    let handleSubmit = event => {\r\n        if (history.length === 0) {\r\n            console.log(\"first time only\");\r\n            let newHistory = history;\r\n            newHistory.push(word);\r\n            setHistory(newHistory);\r\n        }\r\n        if (word !== undefined) {\r\n            if (dictionary[history[history.length - 1].charAt(history[history.length - 1].length - 1)].indexOf(word) !== -1) {\r\n                let newHistory = history;\r\n                newHistory.push(word);\r\n                setHistory(newHistory);\r\n                setValid(\"true\");\r\n            } else {\r\n                setValid(\"false\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"shiritori\" style={{marginTop: \"30px\"}}>\r\n            <Link to=\"/\" style={{position: \"absolute\", top: \"0\", left: \"0\", padding: \"20px\"}}>Go Back</Link>\r\n            <div className=\"container\">\r\n                <div>\r\n                    <label aria-label=\"word\" >Enter Word:</label>\r\n                    <input type=\"text\" onChange={handleInputChange}/>\r\n                    <button onClick={handleSubmit}>Submit</button>\r\n                </div>\r\n                <div>\r\n                    <label> Valid Word: {valid}</label>\r\n                    <p>{history}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shiritori;","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}